---
title: Simulaci√≥n
format: html
---

```{python}
from simu import *
mat = cargar_mat(r"C:\Users\augus\dev\gl\sashakile\rayleigh-taylor\sim2.mat")
````

```{python}
    grilla_x = 64
    grilla_y = 128

    # [dx,dy,dt]
    dx, dy, dt = 1/2, 1/2, 0.1
    delta = array([dx, dy, dt]) 
    delta2 = (dx**2, dy**2)

    posicion_interfaz = grilla_x // 2

    grilla = (grilla_x, grilla_y)

    concentracion_inicial = 1.0

    coef_difusion = array([0.1, 0.1, 0.1])
    k_cinetico = 1.0

    r0 = 1
    R = array([r0, 20, 1, 1]) 

    coef = 0.5*(((dx**2)*(dy**2)/(dx**2+dy**2)))

    concentracion = iniciar_concentracion(grilla, posicion_interfaz, concentracion_inicial)
    psi = ones(grilla)

    # concentracion, psi = inicializar_con_matlab(mat)

    ax=None
    # fig, ax = plt.subplots(3,3)
    fig2, d = plt.subplots(1)

    pasos = 300
    rho = mat[:,:,0,6]
    simu = [(concentracion, psi, (psi,psi), rho, concentracion)]
    for t in range(pasos):
        if t % 10 == 0:
            # fig.suptitle(f"Paso: {t}", fontsize=16)
            fig2.suptitle(f"Paso: {t}", fontsize=16)
            plot_densidad(d, concentracion, R)
            display(fig2)
            # display(fig)
        # concentracion, psi = avanzar(concentracion, psi, delta,delta2, R, coef, coef_difusion, k_cinetico, ax)
        (concentracion, psi, v, rho, c_int) = avanzar(concentracion, psi, delta,delta2, R, coef, coef_difusion, k_cinetico, ax)
        simu.append((concentracion, psi, v, rho, c_int))
        # plt.show()
```




```{python}
from numpy import round
fig3, ax3 = plt.subplots(4,3)
for i in range(len(simu)):
    c_m = mat[:,:,i,:3]
    vx_m = mat[:,:,i,3]
    vy_m = mat[:,:,i,4]
    psi_m = mat[:,:,i, 5]
    rho_m = mat[:,:,i,6]
    c_i_m = mat[:,:,i,7:]
    
    c_p, psi_p, v_p, rho_p, c_i_p = simu[i]

    dc = round(c_m - c_p,10)
    dp = round(psi_m - psi_p, 10)
    dr = round(rho_m - rho_p, 10)
    dci = round(c_i_m - c_i_p, 10)
    dvx = round(vx_m - v_p[0], 10)
    dvy = round(vy_m - v_p[1], 10)
    
    ax3[0,0].imshow(dc[:,:,0])
    ax3[0,1].imshow(dc[:,:,1])
    ax3[0,2].imshow(dc[:,:,2])
    ax3[1,0].imshow(dci[:,:,0])
    ax3[1,1].imshow(dci[:,:,1])
    ax3[1,2].imshow(dci[:,:,2])
    ax3[2,0].imshow(dp)
    ax3[2,1].imshow(dr)
    ax3[3,0].imshow(dvx)
    ax3[3,1].imshow(dvy)
    fig3.suptitle(f"Paso: {i}", fontsize=16)
    display(fig3)
```